<?php

namespace App\Entity;

use FOS\UserBundle\Model\User as BaseUser;

/**
 * User
 */
class User extends BaseUser
{
    /**
     * @var integer
     */
    protected $id;

    /**
     * @var string
     */
    private $firstName;

    /**
     * @var string
     */
    private $lastName;

    /**
     * @var \App\Entity\UserType
     */
    private $userType;

    /**
     * @var \App\Entity\Position
     */
    private $position;

    /**
     * @var \App\Entity\Team
     */
    private $team;

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    private $userRoles;

    public function setEmail($email)
    {
        $this->setUsername($email);

        return parent::setEmail($email); // TODO: Change the autogenerated stub
    }


    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set firstName
     *
     * @param string $firstName
     *
     * @return User
     */
    public function setFirstName($firstName)
    {
        $this->firstName = $firstName;

        return $this;
    }

    /**
     * Get firstName
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->firstName;
    }

    /**
     * Set lastName
     *
     * @param string $lastName
     *
     * @return User
     */
    public function setLastName($lastName)
    {
        $this->lastName = $lastName;

        return $this;
    }

    /**
     * Get lastName
     *
     * @return string
     */
    public function getLastName()
    {
        return $this->lastName;
    }

    /**
     * Set userType
     *
     * @param \App\Entity\UserType $userType
     *
     * @return User
     */
    public function setUserType(\App\Entity\UserType $userType = null)
    {
        $this->userType = $userType;

        return $this;
    }

    /**
     * Get userType
     *
     * @return \App\Entity\UserType
     */
    public function getUserType()
    {
        return $this->userType;
    }

    /**
     * Set position
     *
     * @param \App\Entity\Position $position
     *
     * @return User
     */
    public function setPosition(\App\Entity\Position $position = null)
    {
        $this->position = $position;

        return $this;
    }

    /**
     * Get position
     *
     * @return \App\Entity\Position
     */
    public function getPosition()
    {
        return $this->position;
    }

    /**
     * Set team
     *
     * @param \App\Entity\Team $team
     *
     * @return User
     */
    public function setTeam(\App\Entity\Team $team = null)
    {
        $this->team = $team;

        return $this;
    }

    /**
     * Get team
     *
     * @return \App\Entity\Team
     */
    public function getTeam()
    {
        return $this->team;
    }

    /**
     * Get roles
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getUserRoles()
    {
        return $this->userRoles;
    }
    /**
     * @var boolean
     */
    private $deleted;


    /**
     * Set deleted
     *
     * @param boolean $deleted
     *
     * @return User
     */
    public function setDeleted($deleted)
    {
        $this->deleted = $deleted;

        return $this;
    }

    /**
     * Get deleted
     *
     * @return boolean
     */
    public function getDeleted()
    {
        return $this->deleted;
    }

    /**
     * Add userRole
     *
     * @param \App\Entity\Role $userRole
     *
     * @return User
     */
    public function addUserRole(\App\Entity\Role $userRole)
    {
        $this->userRoles[] = $userRole;

        return $this;
    }

    /**
     * Remove userRole
     *
     * @param \App\Entity\Role $userRole
     */
    public function removeUserRole(\App\Entity\Role $userRole)
    {
        $this->userRoles->removeElement($userRole);
    }
}
